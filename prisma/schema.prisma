generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CUSTOMER
  ADMIN
}

enum OrderStatus {
  PROCESSING
  DELIVERED
  COMPLETED
  CANCELLED
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique @db.VarChar(50)
  password    String
  role        Role      @default(CUSTOMER)
  address     String    @db.VarChar(50)
  email       String    @unique @db.VarChar(50)
  phoneNumber String    @default("000-000-0000")
  orders      Order[]
  ratings     Ratings[]
  Menu        Menu[]
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  menus Menu[]
}

model Order {
  id         String      @id @default(uuid())
  orderItems OrderItem[]
  amount     Int         @default(1)
  userId     Int
  user       User        @relation(fields: [userId], references: [id])
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  status     OrderStatus @default(PROCESSING)
}

model Menu {
  id          Int         @id @default(autoincrement())
  name        String
  price       Int
  categoryId  String
  category    Category    @relation(fields: [categoryId], references: [id])
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  menuImages  MenuImages?
  ratings     Ratings[]
  calories    String
  description String
}

model OrderItem {
  id       String @id @default(uuid())
  menuId   Int
  orderId  String
  menu     Menu   @relation(fields: [menuId], references: [id])
  order    Order  @relation(fields: [orderId], references: [id])
  quantity Int    @default(1)
}

model MenuImages {
  menuId Int     @unique
  menu   Menu    @relation(fields: [menuId], references: [id])
  img1   String?
  img2   String?
  img3   String?
  img4   String?
}

model Ratings {
  id     Int   @id @default(autoincrement())
  rating Float @db.DoublePrecision
  menuId Int
  menu   Menu  @relation(fields: [menuId], references: [id])
  User   User  @relation(fields: [userId], references: [id])
  userId Int
}
